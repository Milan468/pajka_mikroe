;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 06.11.2018 04:08:42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EFB8  	GOTO        1904
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF003EF79  	GOTO        1778
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xF003EF9A  	GOTO        1844
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x001C	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x001E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0020	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x0022	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x0024	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x0026	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x0028	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x002A	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x002C	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x002E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x0030	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x0032	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x0034	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x0036	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x0038	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x003A	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x003C	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x003E	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x0040	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x0042	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x0044	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x0046	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x0048	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x004A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x004C	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x004E	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x0050	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x0052	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x0054	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x0056	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x0058	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x005A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x005C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x005E	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x0060	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x0062	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x0064	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x0066	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x0068	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x006A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x006C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x006E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x0070	0x0000      	NOP
;__Lib_Math.c,197 :: 		
L_end_Div_16x16_S_L:
0x0072	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x0074	0x5004      	MOVF        R4, 0 
0x0076	0x0A00      	XORLW       0
0x0078	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x007A	0x5005      	MOVF        R5, 0 
0x007C	0x0A00      	XORLW       0
0x007E	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x0080	0x0EFF      	MOVLW       255
0x0082	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x0084	0x0E7F      	MOVLW       127
0x0086	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x0088	0xD057      	BRA         L_end_Div_16x16_S
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x008A	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x008C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x008E	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x0090	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x0092	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x0094	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x0096	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x0098	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x009A	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x009C	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x009E	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x00A0	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x00A2	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x00A4	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x00A6	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x00A8	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x00AA	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x00AC	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x00AE	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x00B0	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x00B2	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x00B4	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x00B6	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x00B8	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x00BA	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x00BC	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x00BE	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x00C0	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x00C2	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x00C4	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x00C6	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x00C8	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x00CA	0xDFA8      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x00CC	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x00CE	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x00D0	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x00D2	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x00D4	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x00D6	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x00D8	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x00DA	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x00DC	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x00DE	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x00E0	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x00E2	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x00E4	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x00E6	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x00E8	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x00EA	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x00EC	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x00EE	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x00F0	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x00F2	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x00F4	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x00F6	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x00F8	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x00FA	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x00FC	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x00FE	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x0100	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x0102	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x0104	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x0106	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x0108	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x010A	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x010C	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x010E	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x0110	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x0112	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x0114	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x0116	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x0118	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x011A	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x011C	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x011E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x0120	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x0122	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x0124	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x0126	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x0128	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x012A	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x012C	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x012E	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x0130	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x0132	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x0134	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x0136	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
L_end_Div_16x16_S:
0x0138	0x0012      	RETURN      0
; end of _Div_16x16_S
_div:
;__Lib_CStdlib.c,248 :: 		
0x013A	0xF04FC000  	MOVFF       R0, _div_su_addr
0x013E	0xF050C001  	MOVFF       R1, _div_su_addr+1
;__Lib_CStdlib.c,251 :: 		
0x0142	0xF004C04D  	MOVFF       FARG_div_denom, R4
0x0146	0xF005C04E  	MOVFF       FARG_div_denom+1, R5
0x014A	0xF000C04B  	MOVFF       FARG_div_number, R0
0x014E	0xF001C04C  	MOVFF       FARG_div_number+1, R1
0x0152	0xDF90      	RCALL       _Div_16x16_S
0x0154	0xF051C000  	MOVFF       R0, div_rv_L0
0x0158	0xF052C001  	MOVFF       R1, div_rv_L0+1
;__Lib_CStdlib.c,252 :: 		
0x015C	0xF004C04D  	MOVFF       FARG_div_denom, R4
0x0160	0xF005C04E  	MOVFF       FARG_div_denom+1, R5
0x0164	0xF000C04B  	MOVFF       FARG_div_number, R0
0x0168	0xF001C04C  	MOVFF       FARG_div_number+1, R1
0x016C	0xDF83      	RCALL       _Div_16x16_S
0x016E	0xF000C008  	MOVFF       R8, R0
0x0172	0xF001C009  	MOVFF       R9, R1
0x0176	0xF053C000  	MOVFF       R0, div_rv_L0+2
0x017A	0xF054C001  	MOVFF       R1, div_rv_L0+3
;__Lib_CStdlib.c,253 :: 		
0x017E	0x0E04      	MOVLW       4
0x0180	0x6E00      	MOVWF       R0 
0x0182	0xFFE1C04F  	MOVFF       _div_su_addr, FSR1L
0x0186	0xFFE2C050  	MOVFF       _div_su_addr+1, FSR1H
0x018A	0x0E51      	MOVLW       div_rv_L0
0x018C	0x6EE9      	MOVWF       FSR0L 
0x018E	0x0E00      	MOVLW       hi_addr(div_rv_L0)
0x0190	0x6EEA      	MOVWF       FSR0H 
L_div69:
0x0192	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0196	0x0600      	DECF        R0, 1 
0x0198	0xE1FC      	BNZ         L_div69
;__Lib_CStdlib.c,254 :: 		
L_end_div:
0x019A	0x0012      	RETURN      0
; end of _div
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x019C	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x019E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x01A0	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x01A2	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x01A4	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x01A6	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x01AA	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x01AE	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x01B0	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x01B2	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x01B6	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x01BA	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x01BC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x01BE	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x01C0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x01C2	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x01C4	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x01C6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x01C8	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x01CA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x01CC	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x01CE	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x01D0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x01D2	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x01D4	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x01D6	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x01D8	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x01DA	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x01DE	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x01E2	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x01E6	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x01EA	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x01EC	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x01EE	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x01F0	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x01F2	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x01F4	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x01F6	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x01F8	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x01FA	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x01FC	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x01FE	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0200	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0202	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x0204	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0206	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0208	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x020A	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x020C	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x020E	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0210	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0212	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0214	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0216	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0218	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x021A	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x021C	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x021E	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0220	0x0012      	RETURN      0
; end of _Div_16X16_U
_nobusy_send_instr:
;libST7036.c,17 :: 		void nobusy_send_instr(unsigned char byte){
;libST7036.c,18 :: 		lcd_RS = 0;
0x0222	0x9289      	BCF         LATA1_bit, BitPos(LATA1_bit+0) 
;libST7036.c,19 :: 		lcd_RW = 0;
0x0224	0x9489      	BCF         LATA2_bit, BitPos(LATA2_bit+0) 
;libST7036.c,20 :: 		lcd_E = 1;
0x0226	0x8689      	BSF         LATA3_bit, BitPos(LATA3_bit+0) 
;libST7036.c,21 :: 		LATC = byte;
0x0228	0xFF8BC04B  	MOVFF       FARG_nobusy_send_instr_byte, LATC
;libST7036.c,22 :: 		lcd_E = 0;
0x022C	0x9689      	BCF         LATA3_bit, BitPos(LATA3_bit+0) 
;libST7036.c,23 :: 		Delay_us(100);
0x022E	0x0E21      	MOVLW       33
0x0230	0x6E0D      	MOVWF       R13, 0
L_nobusy_send_instr0:
0x0232	0x2E0D      	DECFSZ      R13, 1, 0
0x0234	0xD7FE      	BRA         L_nobusy_send_instr0
;libST7036.c,24 :: 		}
L_end_nobusy_send_instr:
0x0236	0x0012      	RETURN      0
; end of _nobusy_send_instr
_nobusy_send_data:
;libST7036.c,26 :: 		void nobusy_send_data(unsigned char byte){
;libST7036.c,27 :: 		lcd_RS = 1;
0x0238	0x8289      	BSF         LATA1_bit, BitPos(LATA1_bit+0) 
;libST7036.c,28 :: 		lcd_RW = 0;
0x023A	0x9489      	BCF         LATA2_bit, BitPos(LATA2_bit+0) 
;libST7036.c,29 :: 		lcd_E = 1;
0x023C	0x8689      	BSF         LATA3_bit, BitPos(LATA3_bit+0) 
;libST7036.c,30 :: 		LATC = byte;
0x023E	0xFF8BC04B  	MOVFF       FARG_nobusy_send_data_byte, LATC
;libST7036.c,31 :: 		lcd_E = 0;
0x0242	0x9689      	BCF         LATA3_bit, BitPos(LATA3_bit+0) 
;libST7036.c,32 :: 		Delay_us(100);
0x0244	0x0E21      	MOVLW       33
0x0246	0x6E0D      	MOVWF       R13, 0
L_nobusy_send_data1:
0x0248	0x2E0D      	DECFSZ      R13, 1, 0
0x024A	0xD7FE      	BRA         L_nobusy_send_data1
;libST7036.c,33 :: 		}
L_end_nobusy_send_data:
0x024C	0x0012      	RETURN      0
; end of _nobusy_send_data
_display:
;pajka.c,291 :: 		void display(u_short lcd_result[]){
;pajka.c,292 :: 		nobusy_send_instr(0x02);    //nastav na zaciatok displaya
0x024E	0x0E02      	MOVLW       2
0x0250	0x6E4B      	MOVWF       FARG_nobusy_send_instr_byte 
0x0252	0xDFE7      	RCALL       _nobusy_send_instr
;pajka.c,293 :: 		for(i=0; i<8; i++){
0x0254	0x6A1C      	CLRF        _i 
L_display75:
0x0256	0x0E08      	MOVLW       8
0x0258	0x5C1C      	SUBWF       _i, 0 
0x025A	0xE215      	BC          L_display76
;pajka.c,294 :: 		byte = lcd_result[i];
0x025C	0x501C      	MOVF        _i, 0 
0x025E	0x243F      	ADDWF       FARG_display_lcd_result, 0 
0x0260	0x6EE9      	MOVWF       FSR0L 
0x0262	0x0E00      	MOVLW       0
0x0264	0x2040      	ADDWFC      FARG_display_lcd_result+1, 0 
0x0266	0x6EEA      	MOVWF       FSR0H 
0x0268	0xF000CFEE  	MOVFF       POSTINC0, R0
0x026C	0xF01DC000  	MOVFF       R0, _byte
;pajka.c,295 :: 		nobusy_send_data(byte);
0x0270	0xF04BC000  	MOVFF       R0, FARG_nobusy_send_data_byte
0x0274	0xDFE1      	RCALL       _nobusy_send_data
;pajka.c,296 :: 		if(i<7) nobusy_send_instr(0x06);    //posun display - entry mode set
0x0276	0x0E07      	MOVLW       7
0x0278	0x5C1C      	SUBWF       _i, 0 
0x027A	0xE203      	BC          L_display78
0x027C	0x0E06      	MOVLW       6
0x027E	0x6E4B      	MOVWF       FARG_nobusy_send_instr_byte 
0x0280	0xDFD0      	RCALL       _nobusy_send_instr
L_display78:
;pajka.c,293 :: 		for(i=0; i<8; i++){
0x0282	0x2A1C      	INCF        _i, 1 
;pajka.c,297 :: 		}
0x0284	0xD7E8      	BRA         L_display75
L_display76:
;pajka.c,298 :: 		}
L_end_display:
0x0286	0x0012      	RETURN      0
; end of _display
_povol_prerus:
;pajka.c,300 :: 		u_short povol_prerus(u_short *p_priz_enc){
;pajka.c,301 :: 		priz_enc = 0;   //aby som zbytocne neskakal do rutiny a nemenil rezim
0x0288	0x6A24      	CLRF        _priz_enc 
;pajka.c,302 :: 		povol_prerus_rucka = 1;
0x028A	0x88F0      	BSF         INT2IE_bit, BitPos(INT2IE_bit+0) 
;pajka.c,303 :: 		povol_prerus_enkoder = 1; //potom povolim prerusenie
0x028C	0x86F2      	BSF         RBIE_bit, BitPos(RBIE_bit+0) 
;pajka.c,304 :: 		return(priz_enc);
0x028E	0x6A00      	CLRF        R0 
;pajka.c,305 :: 		}
L_end_povol_prerus:
0x0290	0x0012      	RETURN      0
; end of _povol_prerus
_konver:
;pajka.c,241 :: 		u_short konver(u_short rezim, u_short res_ad_eeprom, u_short lcd_result[]){
;pajka.c,242 :: 		u_short temp = 0;
0x0292	0x6A46      	CLRF        konver_temp_L0 
;pajka.c,245 :: 		res_lcd = (res_ad_eeprom * prevod_lcd);
0x0294	0xF000C040  	MOVFF       FARG_konver_res_ad_eeprom, R0
0x0298	0x0E00      	MOVLW       0
0x029A	0x6E01      	MOVWF       R1 
0x029C	0x0EB9      	MOVLW       185
0x029E	0x6E04      	MOVWF       R4 
0x02A0	0x0E00      	MOVLW       0
0x02A2	0x6E05      	MOVWF       R5 
0x02A4	0xDF7B      	RCALL       _Mul_16X16_U
0x02A6	0xF044C000  	MOVFF       R0, konver_res_lcd_L0
0x02AA	0xF045C001  	MOVFF       R1, konver_res_lcd_L0+1
;pajka.c,246 :: 		res_lcd = res_lcd / 100;
0x02AE	0x0E64      	MOVLW       100
0x02B0	0x6E04      	MOVWF       R4 
0x02B2	0x0E00      	MOVLW       0
0x02B4	0x6E05      	MOVWF       R5 
0x02B6	0xDF9A      	RCALL       _Div_16X16_U
0x02B8	0xF044C000  	MOVFF       R0, konver_res_lcd_L0
0x02BC	0xF045C001  	MOVFF       R1, konver_res_lcd_L0+1
;pajka.c,247 :: 		digit_sto = div(res_lcd, 100);   //oddelim stovky
0x02C0	0xF04BC000  	MOVFF       R0, FARG_div_number
0x02C4	0xF04CC001  	MOVFF       R1, FARG_div_number+1
0x02C8	0x0E64      	MOVLW       100
0x02CA	0x6E4D      	MOVWF       FARG_div_denom 
0x02CC	0x0E00      	MOVLW       0
0x02CE	0x6E4E      	MOVWF       FARG_div_denom+1 
0x02D0	0x0E47      	MOVLW       FLOC__konver
0x02D2	0x6E00      	MOVWF       R0 
0x02D4	0x0E00      	MOVLW       hi_addr(FLOC__konver)
0x02D6	0x6E01      	MOVWF       R1 
0x02D8	0xDF30      	RCALL       _div
0x02DA	0x0E04      	MOVLW       4
0x02DC	0x6E00      	MOVWF       R0 
0x02DE	0x0E1E      	MOVLW       _digit_sto
0x02E0	0x6EE1      	MOVWF       FSR1L 
0x02E2	0x0E00      	MOVLW       hi_addr(_digit_sto)
0x02E4	0x6EE2      	MOVWF       FSR1H 
0x02E6	0x0E47      	MOVLW       FLOC__konver
0x02E8	0x6EE9      	MOVWF       FSR0L 
0x02EA	0x0E00      	MOVLW       hi_addr(FLOC__konver)
0x02EC	0x6EEA      	MOVWF       FSR0H 
L_konver44:
0x02EE	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x02F2	0x0600      	DECF        R0, 1 
0x02F4	0xE1FC      	BNZ         L_konver44
;pajka.c,248 :: 		sto = digit_sto.quot;
0x02F6	0xF022C01E  	MOVFF       _digit_sto, _sto
;pajka.c,249 :: 		res_lcd = res_lcd - (sto*100);
0x02FA	0x0E64      	MOVLW       100
0x02FC	0x021E      	MULWF       _digit_sto 
0x02FE	0xF000CFF3  	MOVFF       PRODL, R0
0x0302	0xF001CFF4  	MOVFF       PRODH, R1
0x0306	0x5000      	MOVF        R0, 0 
0x0308	0x5C44      	SUBWF       konver_res_lcd_L0, 0 
0x030A	0x6E00      	MOVWF       R0 
0x030C	0x5001      	MOVF        R1, 0 
0x030E	0x5845      	SUBWFB      konver_res_lcd_L0+1, 0 
0x0310	0x6E01      	MOVWF       R1 
0x0312	0xF044C000  	MOVFF       R0, konver_res_lcd_L0
0x0316	0xF045C001  	MOVFF       R1, konver_res_lcd_L0+1
;pajka.c,250 :: 		digit_des = div(res_lcd, 10);    //oddelim desiatky
0x031A	0xF04BC000  	MOVFF       R0, FARG_div_number
0x031E	0xF04CC001  	MOVFF       R1, FARG_div_number+1
0x0322	0x0E0A      	MOVLW       10
0x0324	0x6E4D      	MOVWF       FARG_div_denom 
0x0326	0x0E00      	MOVLW       0
0x0328	0x6E4E      	MOVWF       FARG_div_denom+1 
0x032A	0x0E47      	MOVLW       FLOC__konver
0x032C	0x6E00      	MOVWF       R0 
0x032E	0x0E00      	MOVLW       hi_addr(FLOC__konver)
0x0330	0x6E01      	MOVWF       R1 
0x0332	0xDF03      	RCALL       _div
0x0334	0x0E04      	MOVLW       4
0x0336	0x6E00      	MOVWF       R0 
0x0338	0x0E26      	MOVLW       _digit_des
0x033A	0x6EE1      	MOVWF       FSR1L 
0x033C	0x0E00      	MOVLW       hi_addr(_digit_des)
0x033E	0x6EE2      	MOVWF       FSR1H 
0x0340	0x0E47      	MOVLW       FLOC__konver
0x0342	0x6EE9      	MOVWF       FSR0L 
0x0344	0x0E00      	MOVLW       hi_addr(FLOC__konver)
0x0346	0x6EEA      	MOVWF       FSR0H 
L_konver45:
0x0348	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x034C	0x0600      	DECF        R0, 1 
0x034E	0xE1FC      	BNZ         L_konver45
;pajka.c,251 :: 		des = digit_des.quot;
0x0350	0xF02AC026  	MOVFF       _digit_des, _des
;pajka.c,252 :: 		jed = digit_des.rem;            //zostanu jednotky
0x0354	0xF025C028  	MOVFF       _digit_des+2, _jed
;pajka.c,254 :: 		switch (rezim) {
0x0358	0xD044      	BRA         L_konver46
;pajka.c,255 :: 		case 0: lcd_result[6] = 0x55; lcd_result[7] = 0x44; break;  //UD - udrziav
L_konver48:
0x035A	0x0E06      	MOVLW       6
0x035C	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x035E	0x6EE1      	MOVWF       FSR1L 
0x0360	0x0E00      	MOVLW       0
0x0362	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0364	0x6EE2      	MOVWF       FSR1H 
0x0366	0x0E55      	MOVLW       85
0x0368	0x6EE6      	MOVWF       POSTINC1 
0x036A	0x0E07      	MOVLW       7
0x036C	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x036E	0x6EE1      	MOVWF       FSR1L 
0x0370	0x0E00      	MOVLW       0
0x0372	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0374	0x6EE2      	MOVWF       FSR1H 
0x0376	0x0E44      	MOVLW       68
0x0378	0x6EE6      	MOVWF       POSTINC1 
0x037A	0xD03F      	BRA         L_konver47
;pajka.c,256 :: 		case 1: lcd_result[6] = 0x53; lcd_result[7] = 0x4D; break;  //SM - smd
L_konver49:
0x037C	0x0E06      	MOVLW       6
0x037E	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0380	0x6EE1      	MOVWF       FSR1L 
0x0382	0x0E00      	MOVLW       0
0x0384	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0386	0x6EE2      	MOVWF       FSR1H 
0x0388	0x0E53      	MOVLW       83
0x038A	0x6EE6      	MOVWF       POSTINC1 
0x038C	0x0E07      	MOVLW       7
0x038E	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0390	0x6EE1      	MOVWF       FSR1L 
0x0392	0x0E00      	MOVLW       0
0x0394	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0396	0x6EE2      	MOVWF       FSR1H 
0x0398	0x0E4D      	MOVLW       77
0x039A	0x6EE6      	MOVWF       POSTINC1 
0x039C	0xD02E      	BRA         L_konver47
;pajka.c,257 :: 		case 2: lcd_result[6] = 0x4E; lcd_result[7] = 0x4F; break;  //NO - normal
L_konver50:
0x039E	0x0E06      	MOVLW       6
0x03A0	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x03A2	0x6EE1      	MOVWF       FSR1L 
0x03A4	0x0E00      	MOVLW       0
0x03A6	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x03A8	0x6EE2      	MOVWF       FSR1H 
0x03AA	0x0E4E      	MOVLW       78
0x03AC	0x6EE6      	MOVWF       POSTINC1 
0x03AE	0x0E07      	MOVLW       7
0x03B0	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x03B2	0x6EE1      	MOVWF       FSR1L 
0x03B4	0x0E00      	MOVLW       0
0x03B6	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x03B8	0x6EE2      	MOVWF       FSR1H 
0x03BA	0x0E4F      	MOVLW       79
0x03BC	0x6EE6      	MOVWF       POSTINC1 
0x03BE	0xD01D      	BRA         L_konver47
;pajka.c,258 :: 		case 3: lcd_result[6] = 0x48; lcd_result[7] = 0x49; break;  //HI - vysoka
L_konver51:
0x03C0	0x0E06      	MOVLW       6
0x03C2	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x03C4	0x6EE1      	MOVWF       FSR1L 
0x03C6	0x0E00      	MOVLW       0
0x03C8	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x03CA	0x6EE2      	MOVWF       FSR1H 
0x03CC	0x0E48      	MOVLW       72
0x03CE	0x6EE6      	MOVWF       POSTINC1 
0x03D0	0x0E07      	MOVLW       7
0x03D2	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x03D4	0x6EE1      	MOVWF       FSR1L 
0x03D6	0x0E00      	MOVLW       0
0x03D8	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x03DA	0x6EE2      	MOVWF       FSR1H 
0x03DC	0x0E49      	MOVLW       73
0x03DE	0x6EE6      	MOVWF       POSTINC1 
0x03E0	0xD00C      	BRA         L_konver47
;pajka.c,259 :: 		}
L_konver46:
0x03E2	0x503F      	MOVF        FARG_konver_rezim, 0 
0x03E4	0x0A00      	XORLW       0
0x03E6	0xE0B9      	BZ          L_konver48
0x03E8	0x503F      	MOVF        FARG_konver_rezim, 0 
0x03EA	0x0A01      	XORLW       1
0x03EC	0xE0C7      	BZ          L_konver49
0x03EE	0x503F      	MOVF        FARG_konver_rezim, 0 
0x03F0	0x0A02      	XORLW       2
0x03F2	0xE0D5      	BZ          L_konver50
0x03F4	0x503F      	MOVF        FARG_konver_rezim, 0 
0x03F6	0x0A03      	XORLW       3
0x03F8	0xE0E3      	BZ          L_konver51
L_konver47:
;pajka.c,260 :: 		lcd_result[3] = 0xDF;   //stupen z tabuliek graf. kontroleru
0x03FA	0x0E03      	MOVLW       3
0x03FC	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x03FE	0x6EE1      	MOVWF       FSR1L 
0x0400	0x0E00      	MOVLW       0
0x0402	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0404	0x6EE2      	MOVWF       FSR1H 
0x0406	0x0EDF      	MOVLW       223
0x0408	0x6EE6      	MOVWF       POSTINC1 
;pajka.c,261 :: 		lcd_result[4] = 0x43;   //C - celsia
0x040A	0x0E04      	MOVLW       4
0x040C	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x040E	0x6EE1      	MOVWF       FSR1L 
0x0410	0x0E00      	MOVLW       0
0x0412	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0414	0x6EE2      	MOVWF       FSR1H 
0x0416	0x0E43      	MOVLW       67
0x0418	0x6EE6      	MOVWF       POSTINC1 
;pajka.c,262 :: 		if(!svietiLCD){ //ak nie je nastaveny priznak tak prazdna medzera
0x041A	0xB21B      	BTFSC       _mojPriznak, 1 
0x041C	0xD009      	BRA         L_konver52
;pajka.c,263 :: 		lcd_result[5] = 0x20;   //medzera
0x041E	0x0E05      	MOVLW       5
0x0420	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0422	0x6EE1      	MOVWF       FSR1L 
0x0424	0x0E00      	MOVLW       0
0x0426	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0428	0x6EE2      	MOVWF       FSR1H 
0x042A	0x0E20      	MOVLW       32
0x042C	0x6EE6      	MOVWF       POSTINC1 
;pajka.c,264 :: 		}
0x042E	0xD008      	BRA         L_konver53
L_konver52:
;pajka.c,266 :: 		lcd_result[5] = 0xFD;   //znak <<
0x0430	0x0E05      	MOVLW       5
0x0432	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0434	0x6EE1      	MOVWF       FSR1L 
0x0436	0x0E00      	MOVLW       0
0x0438	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x043A	0x6EE2      	MOVWF       FSR1H 
0x043C	0x0EFD      	MOVLW       253
0x043E	0x6EE6      	MOVWF       POSTINC1 
;pajka.c,267 :: 		}
L_konver53:
;pajka.c,268 :: 		if(zapis) lcd_result[5] = 0x23;   //znak zapisu #
0x0440	0xA41B      	BTFSS       _mojPriznak, 2 
0x0442	0xD008      	BRA         L_konver54
0x0444	0x0E05      	MOVLW       5
0x0446	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0448	0x6EE1      	MOVWF       FSR1L 
0x044A	0x0E00      	MOVLW       0
0x044C	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x044E	0x6EE2      	MOVWF       FSR1H 
0x0450	0x0E23      	MOVLW       35
0x0452	0x6EE6      	MOVWF       POSTINC1 
L_konver54:
;pajka.c,269 :: 		for (temp = 0; temp < 3; temp++){
0x0454	0x6A46      	CLRF        konver_temp_L0 
L_konver55:
0x0456	0x0E03      	MOVLW       3
0x0458	0x5C46      	SUBWF       konver_temp_L0, 0 
0x045A	0xB0D8      	BTFSC       STATUS, 0 
0x045C	0xD08E      	BRA         L_konver56
;pajka.c,270 :: 		switch (temp) {
0x045E	0xD009      	BRA         L_konver58
;pajka.c,271 :: 		case 0 : temp0 = sto; break;
L_konver60:
0x0460	0xF043C022  	MOVFF       _sto, konver_temp0_L0
0x0464	0xD00F      	BRA         L_konver59
;pajka.c,272 :: 		case 1 : temp0 = des; break;
L_konver61:
0x0466	0xF043C02A  	MOVFF       _des, konver_temp0_L0
0x046A	0xD00C      	BRA         L_konver59
;pajka.c,273 :: 		case 2 : temp0 = jed; break;
L_konver62:
0x046C	0xF043C025  	MOVFF       _jed, konver_temp0_L0
0x0470	0xD009      	BRA         L_konver59
;pajka.c,274 :: 		}
L_konver58:
0x0472	0x5046      	MOVF        konver_temp_L0, 0 
0x0474	0x0A00      	XORLW       0
0x0476	0xE0F4      	BZ          L_konver60
0x0478	0x5046      	MOVF        konver_temp_L0, 0 
0x047A	0x0A01      	XORLW       1
0x047C	0xE0F4      	BZ          L_konver61
0x047E	0x5046      	MOVF        konver_temp_L0, 0 
0x0480	0x0A02      	XORLW       2
0x0482	0xE0F4      	BZ          L_konver62
L_konver59:
;pajka.c,275 :: 		switch(temp0) {
0x0484	0xD05A      	BRA         L_konver63
;pajka.c,276 :: 		case 0 : lcd_result[temp] = 0x30; break;
L_konver65:
0x0486	0x5046      	MOVF        konver_temp_L0, 0 
0x0488	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x048A	0x6EE1      	MOVWF       FSR1L 
0x048C	0x0E00      	MOVLW       0
0x048E	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0490	0x6EE2      	MOVWF       FSR1H 
0x0492	0x0E30      	MOVLW       48
0x0494	0x6EE6      	MOVWF       POSTINC1 
0x0496	0xD06F      	BRA         L_konver64
;pajka.c,277 :: 		case 1 : lcd_result[temp] = 0x31; break;
L_konver66:
0x0498	0x5046      	MOVF        konver_temp_L0, 0 
0x049A	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x049C	0x6EE1      	MOVWF       FSR1L 
0x049E	0x0E00      	MOVLW       0
0x04A0	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04A2	0x6EE2      	MOVWF       FSR1H 
0x04A4	0x0E31      	MOVLW       49
0x04A6	0x6EE6      	MOVWF       POSTINC1 
0x04A8	0xD066      	BRA         L_konver64
;pajka.c,278 :: 		case 2 : lcd_result[temp] = 0x32; break;
L_konver67:
0x04AA	0x5046      	MOVF        konver_temp_L0, 0 
0x04AC	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x04AE	0x6EE1      	MOVWF       FSR1L 
0x04B0	0x0E00      	MOVLW       0
0x04B2	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04B4	0x6EE2      	MOVWF       FSR1H 
0x04B6	0x0E32      	MOVLW       50
0x04B8	0x6EE6      	MOVWF       POSTINC1 
0x04BA	0xD05D      	BRA         L_konver64
;pajka.c,279 :: 		case 3 : lcd_result[temp] = 0x33; break;
L_konver68:
0x04BC	0x5046      	MOVF        konver_temp_L0, 0 
0x04BE	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x04C0	0x6EE1      	MOVWF       FSR1L 
0x04C2	0x0E00      	MOVLW       0
0x04C4	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04C6	0x6EE2      	MOVWF       FSR1H 
0x04C8	0x0E33      	MOVLW       51
0x04CA	0x6EE6      	MOVWF       POSTINC1 
0x04CC	0xD054      	BRA         L_konver64
;pajka.c,280 :: 		case 4 : lcd_result[temp] = 0x34; break;
L_konver69:
0x04CE	0x5046      	MOVF        konver_temp_L0, 0 
0x04D0	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x04D2	0x6EE1      	MOVWF       FSR1L 
0x04D4	0x0E00      	MOVLW       0
0x04D6	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04D8	0x6EE2      	MOVWF       FSR1H 
0x04DA	0x0E34      	MOVLW       52
0x04DC	0x6EE6      	MOVWF       POSTINC1 
0x04DE	0xD04B      	BRA         L_konver64
;pajka.c,281 :: 		case 5 : lcd_result[temp] = 0x35; break;
L_konver70:
0x04E0	0x5046      	MOVF        konver_temp_L0, 0 
0x04E2	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x04E4	0x6EE1      	MOVWF       FSR1L 
0x04E6	0x0E00      	MOVLW       0
0x04E8	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04EA	0x6EE2      	MOVWF       FSR1H 
0x04EC	0x0E35      	MOVLW       53
0x04EE	0x6EE6      	MOVWF       POSTINC1 
0x04F0	0xD042      	BRA         L_konver64
;pajka.c,282 :: 		case 6 : lcd_result[temp] = 0x36; break;
L_konver71:
0x04F2	0x5046      	MOVF        konver_temp_L0, 0 
0x04F4	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x04F6	0x6EE1      	MOVWF       FSR1L 
0x04F8	0x0E00      	MOVLW       0
0x04FA	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x04FC	0x6EE2      	MOVWF       FSR1H 
0x04FE	0x0E36      	MOVLW       54
0x0500	0x6EE6      	MOVWF       POSTINC1 
0x0502	0xD039      	BRA         L_konver64
;pajka.c,283 :: 		case 7 : lcd_result[temp] = 0x37; break;
L_konver72:
0x0504	0x5046      	MOVF        konver_temp_L0, 0 
0x0506	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x0508	0x6EE1      	MOVWF       FSR1L 
0x050A	0x0E00      	MOVLW       0
0x050C	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x050E	0x6EE2      	MOVWF       FSR1H 
0x0510	0x0E37      	MOVLW       55
0x0512	0x6EE6      	MOVWF       POSTINC1 
0x0514	0xD030      	BRA         L_konver64
;pajka.c,284 :: 		case 8 : lcd_result[temp] = 0x38; break;
L_konver73:
0x0516	0x5046      	MOVF        konver_temp_L0, 0 
0x0518	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x051A	0x6EE1      	MOVWF       FSR1L 
0x051C	0x0E00      	MOVLW       0
0x051E	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0520	0x6EE2      	MOVWF       FSR1H 
0x0522	0x0E38      	MOVLW       56
0x0524	0x6EE6      	MOVWF       POSTINC1 
0x0526	0xD027      	BRA         L_konver64
;pajka.c,285 :: 		case 9 : lcd_result[temp] = 0x39; break;
L_konver74:
0x0528	0x5046      	MOVF        konver_temp_L0, 0 
0x052A	0x2441      	ADDWF       FARG_konver_lcd_result, 0 
0x052C	0x6EE1      	MOVWF       FSR1L 
0x052E	0x0E00      	MOVLW       0
0x0530	0x2042      	ADDWFC      FARG_konver_lcd_result+1, 0 
0x0532	0x6EE2      	MOVWF       FSR1H 
0x0534	0x0E39      	MOVLW       57
0x0536	0x6EE6      	MOVWF       POSTINC1 
0x0538	0xD01E      	BRA         L_konver64
;pajka.c,286 :: 		}
L_konver63:
0x053A	0x5043      	MOVF        konver_temp0_L0, 0 
0x053C	0x0A00      	XORLW       0
0x053E	0xE0A3      	BZ          L_konver65
0x0540	0x5043      	MOVF        konver_temp0_L0, 0 
0x0542	0x0A01      	XORLW       1
0x0544	0xE0A9      	BZ          L_konver66
0x0546	0x5043      	MOVF        konver_temp0_L0, 0 
0x0548	0x0A02      	XORLW       2
0x054A	0xE0AF      	BZ          L_konver67
0x054C	0x5043      	MOVF        konver_temp0_L0, 0 
0x054E	0x0A03      	XORLW       3
0x0550	0xE0B5      	BZ          L_konver68
0x0552	0x5043      	MOVF        konver_temp0_L0, 0 
0x0554	0x0A04      	XORLW       4
0x0556	0xE0BB      	BZ          L_konver69
0x0558	0x5043      	MOVF        konver_temp0_L0, 0 
0x055A	0x0A05      	XORLW       5
0x055C	0xE0C1      	BZ          L_konver70
0x055E	0x5043      	MOVF        konver_temp0_L0, 0 
0x0560	0x0A06      	XORLW       6
0x0562	0xE0C7      	BZ          L_konver71
0x0564	0x5043      	MOVF        konver_temp0_L0, 0 
0x0566	0x0A07      	XORLW       7
0x0568	0xE0CD      	BZ          L_konver72
0x056A	0x5043      	MOVF        konver_temp0_L0, 0 
0x056C	0x0A08      	XORLW       8
0x056E	0xE0D3      	BZ          L_konver73
0x0570	0x5043      	MOVF        konver_temp0_L0, 0 
0x0572	0x0A09      	XORLW       9
0x0574	0xE0D9      	BZ          L_konver74
L_konver64:
;pajka.c,269 :: 		for (temp = 0; temp < 3; temp++){
0x0576	0x2A46      	INCF        konver_temp_L0, 1 
;pajka.c,287 :: 		}
0x0578	0xD76E      	BRA         L_konver55
L_konver56:
;pajka.c,288 :: 		return (0);
0x057A	0x6A00      	CLRF        R0 
;pajka.c,289 :: 		}
L_end_konver:
0x057C	0x0012      	RETURN      0
; end of _konver
_EEPROM_Write:
;__Lib_EEPROM_256.c,21 :: 		
;__Lib_EEPROM_256.c,24 :: 		
L_EEPROM_Write0:
0x057E	0xA2A6      	BTFSS       EECON1, 1 
0x0580	0xD002      	BRA         L_EEPROM_Write1
;__Lib_EEPROM_256.c,25 :: 		
0x0582	0x0000      	NOP
0x0584	0xD7FC      	BRA         L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_256.c,26 :: 		
0x0586	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,27 :: 		
0x0588	0xFFA9C03F  	MOVFF       FARG_EEPROM_Write_address, EEADR
;__Lib_EEPROM_256.c,28 :: 		
0x058C	0xFFA8C040  	MOVFF       FARG_EEPROM_Write_data_, EEDATA
;__Lib_EEPROM_256.c,29 :: 		
0x0590	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,30 :: 		
0x0592	0x84A6      	BSF         EECON1, 2 
;__Lib_EEPROM_256.c,32 :: 		
0x0594	0xF000CFF2  	MOVFF       INTCON, R0
;__Lib_EEPROM_256.c,35 :: 		
0x0598	0x9EF2      	BCF         INTCON, 7 
;__Lib_EEPROM_256.c,36 :: 		
0x059A	0x0E55      	MOVLW       85
0x059C	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,37 :: 		
0x059E	0x0EAA      	MOVLW       170
0x05A0	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_256.c,38 :: 		
0x05A2	0x82A6      	BSF         EECON1, 1 
;__Lib_EEPROM_256.c,42 :: 		
0x05A4	0xBE00      	BTFSC       R0, 7 
0x05A6	0xD002      	BRA         L__EEPROM_Write6
0x05A8	0x9EF2      	BCF         INTCON, 7 
0x05AA	0xD001      	BRA         L__EEPROM_Write7
L__EEPROM_Write6:
0x05AC	0x8EF2      	BSF         INTCON, 7 
L__EEPROM_Write7:
;__Lib_EEPROM_256.c,44 :: 		
0x05AE	0x94A6      	BCF         EECON1, 2 
;__Lib_EEPROM_256.c,46 :: 		
L_EEPROM_Write2:
0x05B0	0xB8A1      	BTFSC       PIR2, 4 
0x05B2	0xD002      	BRA         L_EEPROM_Write3
;__Lib_EEPROM_256.c,47 :: 		
0x05B4	0x0000      	NOP
0x05B6	0xD7FC      	BRA         L_EEPROM_Write2
L_EEPROM_Write3:
;__Lib_EEPROM_256.c,49 :: 		
0x05B8	0x98A1      	BCF         PIR2, 4 
;__Lib_EEPROM_256.c,50 :: 		
L_end_EEPROM_Write:
0x05BA	0x0012      	RETURN      0
; end of _EEPROM_Write
_EEPROM_Read:
;__Lib_EEPROM_256.c,7 :: 		
;__Lib_EEPROM_256.c,9 :: 		
0x05BC	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,10 :: 		
0x05BE	0xFFA9C03F  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_256.c,11 :: 		
0x05C2	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,12 :: 		
0x05C4	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_256.c,14 :: 		
0x05C6	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_256.c,16 :: 		
L_end_EEPROM_Read:
0x05CA	0x0012      	RETURN      0
; end of _EEPROM_Read
_nastav_rezim:
;pajka.c,162 :: 		u_short nastav_rezim(u_short rezim, u_short res_eeprom){
;pajka.c,164 :: 		res_eeprom = EEPROM_Read(rezim);
0x05CC	0xF03FC03D  	MOVFF       FARG_nastav_rezim_rezim, FARG_EEPROM_Read_address
0x05D0	0xDFF5      	RCALL       _EEPROM_Read
0x05D2	0xF03EC000  	MOVFF       R0, FARG_nastav_rezim_res_eeprom
;pajka.c,165 :: 		return(res_eeprom);
;pajka.c,166 :: 		}
L_end_nastav_rezim:
0x05D6	0x0012      	RETURN      0
; end of _nastav_rezim
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x05D8	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x05DA	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x05DE	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x05E0	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x05E2	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x05E4	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x05E6	0x0012      	RETURN      0
; end of ___CC2DW
_rut_encBUT:
;pajka.c,168 :: 		u_short rut_encBUT(u_short *p_priz_enc){
;pajka.c,169 :: 		Delay_ms(500);
0x05E8	0x0E03      	MOVLW       3
0x05EA	0x6E0B      	MOVWF       R11, 0
0x05EC	0x0E8A      	MOVLW       138
0x05EE	0x6E0C      	MOVWF       R12, 0
0x05F0	0x0E55      	MOVLW       85
0x05F2	0x6E0D      	MOVWF       R13, 0
L_rut_encBUT31:
0x05F4	0x2E0D      	DECFSZ      R13, 1, 0
0x05F6	0xD7FE      	BRA         L_rut_encBUT31
0x05F8	0x2E0C      	DECFSZ      R12, 1, 0
0x05FA	0xD7FC      	BRA         L_rut_encBUT31
0x05FC	0x2E0B      	DECFSZ      R11, 1, 0
0x05FE	0xD7FA      	BRA         L_rut_encBUT31
0x0600	0x0000      	NOP
0x0602	0x0000      	NOP
;pajka.c,170 :: 		if(in_encBUT){             //ak je stlacenie dlhe
0x0604	0xAC81      	BTFSS       RB6_bit, BitPos(RB6_bit+0) 
0x0606	0xD00E      	BRA         L_rut_encBUT32
;pajka.c,171 :: 		if(blinkdisp){
0x0608	0xA01B      	BTFSS       _mojPriznak, 0 
0x060A	0xD00B      	BRA         L_rut_encBUT33
;pajka.c,172 :: 		eeprom_write(rezim, res_eeprom);    //zapis hodnotu do eeprom
0x060C	0xF03FC03C  	MOVFF       _rezim, FARG_EEPROM_Write_address
0x0610	0xF040C023  	MOVFF       _res_eeprom, FARG_EEPROM_Write_data_
0x0614	0xDFB4      	RCALL       _EEPROM_Write
;pajka.c,173 :: 		blinkdisp = 0;  //hned aj vypni blikanie
0x0616	0x901B      	BCF         _mojPriznak, 0 
;pajka.c,174 :: 		spusti_tmr1 = 0;    //zastav tmr1
0x0618	0x90CD      	BCF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;pajka.c,175 :: 		povol_prerus_tmr1 = 0;
0x061A	0x909D      	BCF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;pajka.c,176 :: 		priz_prerus_tmr1 = 0;
0x061C	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;pajka.c,177 :: 		svietiLCD = 0;
0x061E	0x921B      	BCF         _mojPriznak, 1 
;pajka.c,178 :: 		zapis = 1;
0x0620	0x841B      	BSF         _mojPriznak, 2 
;pajka.c,179 :: 		}
L_rut_encBUT33:
;pajka.c,180 :: 		}
0x0622	0xD010      	BRA         L_rut_encBUT34
L_rut_encBUT32:
;pajka.c,182 :: 		blinkdisp = ~blinkdisp; //zapni/vypni blikanie
0x0624	0x701B      	BTG         _mojPriznak, 0 
;pajka.c,183 :: 		if(blinkdisp){          //ak si zapol blikanie
0x0626	0xA01B      	BTFSS       _mojPriznak, 0 
0x0628	0xD006      	BRA         L_rut_encBUT35
;pajka.c,184 :: 		TMR1H = 0;
0x062A	0x6ACF      	CLRF        TMR1H 
;pajka.c,185 :: 		TMR1L = 0;
0x062C	0x6ACE      	CLRF        TMR1L 
;pajka.c,186 :: 		priz_prerus_tmr1 = 0;//spusti tmr1
0x062E	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;pajka.c,187 :: 		povol_prerus_tmr1 = 1;
0x0630	0x809D      	BSF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;pajka.c,188 :: 		spusti_tmr1 = 1;
0x0632	0x80CD      	BSF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;pajka.c,189 :: 		}
0x0634	0xD007      	BRA         L_rut_encBUT36
L_rut_encBUT35:
;pajka.c,191 :: 		spusti_tmr1 = 0;    //zastav tmr1
0x0636	0x90CD      	BCF         TMR1ON_bit, BitPos(TMR1ON_bit+0) 
;pajka.c,192 :: 		povol_prerus_tmr1 = 0;
0x0638	0x909D      	BCF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;pajka.c,193 :: 		priz_prerus_tmr1 = 0;
0x063A	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;pajka.c,194 :: 		TMR1H = 0;
0x063C	0x6ACF      	CLRF        TMR1H 
;pajka.c,195 :: 		TMR1L = 0;
0x063E	0x6ACE      	CLRF        TMR1L 
;pajka.c,196 :: 		svietiLCD = 0;
0x0640	0x921B      	BCF         _mojPriznak, 1 
;pajka.c,197 :: 		zapis = 0;
0x0642	0x941B      	BCF         _mojPriznak, 2 
;pajka.c,198 :: 		}
L_rut_encBUT36:
;pajka.c,199 :: 		}
L_rut_encBUT34:
;pajka.c,202 :: 		povol_prerus(&priz_enc);
0x0644	0x0E24      	MOVLW       _priz_enc
0x0646	0x6E3F      	MOVWF       FARG_povol_prerus_p_priz_enc 
0x0648	0x0E00      	MOVLW       hi_addr(_priz_enc)
0x064A	0x6E40      	MOVWF       FARG_povol_prerus_p_priz_enc+1 
0x064C	0xDE1D      	RCALL       _povol_prerus
;pajka.c,203 :: 		}
L_end_rut_encBUT:
0x064E	0x0012      	RETURN      0
; end of _rut_encBUT
_rut_encB:
;pajka.c,222 :: 		u_short rut_encB(u_short *p_res_eeprom){
;pajka.c,223 :: 		if (!blinkdisp){        //a neblika display
0x0650	0xB01B      	BTFSC       _mojPriznak, 0 
0x0652	0xD00C      	BRA         L_rut_encB40
;pajka.c,224 :: 		if (!rezim) {     //tak zmen rezim
0x0654	0x523C      	MOVF        _rezim, 1 
0x0656	0xE103      	BNZ         L_rut_encB41
;pajka.c,225 :: 		rezim = 3;
0x0658	0x0E03      	MOVLW       3
0x065A	0x6E3C      	MOVWF       _rezim 
;pajka.c,226 :: 		}
0x065C	0xD001      	BRA         L_rut_encB42
L_rut_encB41:
;pajka.c,228 :: 		rezim -= 1;
0x065E	0x063C      	DECF        _rezim, 1 
;pajka.c,229 :: 		}
L_rut_encB42:
;pajka.c,230 :: 		res_eeprom = EEPROM_Read(rezim);
0x0660	0xF03FC03C  	MOVFF       _rezim, FARG_EEPROM_Read_address
0x0664	0xDFAB      	RCALL       _EEPROM_Read
0x0666	0xF023C000  	MOVFF       R0, _res_eeprom
;pajka.c,231 :: 		}
0x066A	0xD013      	BRA         L_rut_encB43
L_rut_encB40:
;pajka.c,233 :: 		res_eeprom -= 5;
0x066C	0x0E05      	MOVLW       5
0x066E	0x5C23      	SUBWF       _res_eeprom, 0 
0x0670	0x6E00      	MOVWF       R0 
0x0672	0xF023C000  	MOVFF       R0, _res_eeprom
;pajka.c,234 :: 		konver(rezim, res_eeprom, &lcd_result);
0x0676	0xF03FC03C  	MOVFF       _rezim, FARG_konver_rezim
0x067A	0xF040C000  	MOVFF       R0, FARG_konver_res_ad_eeprom
0x067E	0x0E32      	MOVLW       _lcd_result
0x0680	0x6E41      	MOVWF       FARG_konver_lcd_result 
0x0682	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x0684	0x6E42      	MOVWF       FARG_konver_lcd_result+1 
0x0686	0xDE05      	RCALL       _konver
;pajka.c,235 :: 		display(&lcd_result);
0x0688	0x0E32      	MOVLW       _lcd_result
0x068A	0x6E3F      	MOVWF       FARG_display_lcd_result 
0x068C	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x068E	0x6E40      	MOVWF       FARG_display_lcd_result+1 
0x0690	0xDDDE      	RCALL       _display
;pajka.c,236 :: 		}
L_rut_encB43:
;pajka.c,237 :: 		povol_prerus(priz_enc);
0x0692	0xF03FC024  	MOVFF       _priz_enc, FARG_povol_prerus_p_priz_enc
0x0696	0x0E00      	MOVLW       0
0x0698	0x6E40      	MOVWF       FARG_povol_prerus_p_priz_enc+1 
0x069A	0xDDF6      	RCALL       _povol_prerus
;pajka.c,238 :: 		return(rezim);
0x069C	0xF000C03C  	MOVFF       _rezim, R0
;pajka.c,239 :: 		}
L_end_rut_encB:
0x06A0	0x0012      	RETURN      0
; end of _rut_encB
_rut_encA:
;pajka.c,205 :: 		u_short rut_encA(u_short *p_res_eeprom){
;pajka.c,206 :: 		if (!blinkdisp){    //ak neblika display
0x06A2	0xB01B      	BTFSC       _mojPriznak, 0 
0x06A4	0xD00B      	BRA         L_rut_encA37
;pajka.c,207 :: 		rezim += 1;     //tak zmen rezim
0x06A6	0x2A3C      	INCF        _rezim, 1 
;pajka.c,208 :: 		if (rezim > 3) {
0x06A8	0x503C      	MOVF        _rezim, 0 
0x06AA	0x0803      	SUBLW       3
0x06AC	0xA0D8      	BTFSS       STATUS, 0 
;pajka.c,209 :: 		rezim = 0;
0x06AE	0x6A3C      	CLRF        _rezim 
;pajka.c,210 :: 		}
L_rut_encA38:
;pajka.c,211 :: 		res_eeprom = EEPROM_Read(rezim);
0x06B0	0xF03FC03C  	MOVFF       _rezim, FARG_EEPROM_Read_address
0x06B4	0xDF83      	RCALL       _EEPROM_Read
0x06B6	0xF023C000  	MOVFF       R0, _res_eeprom
;pajka.c,212 :: 		}
0x06BA	0xD013      	BRA         L_rut_encA39
L_rut_encA37:
;pajka.c,214 :: 		res_eeprom += 5;
0x06BC	0x0E05      	MOVLW       5
0x06BE	0x2423      	ADDWF       _res_eeprom, 0 
0x06C0	0x6E00      	MOVWF       R0 
0x06C2	0xF023C000  	MOVFF       R0, _res_eeprom
;pajka.c,215 :: 		konver(rezim, res_eeprom, &lcd_result);
0x06C6	0xF03FC03C  	MOVFF       _rezim, FARG_konver_rezim
0x06CA	0xF040C000  	MOVFF       R0, FARG_konver_res_ad_eeprom
0x06CE	0x0E32      	MOVLW       _lcd_result
0x06D0	0x6E41      	MOVWF       FARG_konver_lcd_result 
0x06D2	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x06D4	0x6E42      	MOVWF       FARG_konver_lcd_result+1 
0x06D6	0xDDDD      	RCALL       _konver
;pajka.c,216 :: 		display(&lcd_result);
0x06D8	0x0E32      	MOVLW       _lcd_result
0x06DA	0x6E3F      	MOVWF       FARG_display_lcd_result 
0x06DC	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x06DE	0x6E40      	MOVWF       FARG_display_lcd_result+1 
0x06E0	0xDDB6      	RCALL       _display
;pajka.c,217 :: 		}
L_rut_encA39:
;pajka.c,218 :: 		povol_prerus(priz_enc);
0x06E2	0xF03FC024  	MOVFF       _priz_enc, FARG_povol_prerus_p_priz_enc
0x06E6	0x0E00      	MOVLW       0
0x06E8	0x6E40      	MOVWF       FARG_povol_prerus_p_priz_enc+1 
0x06EA	0xDDCE      	RCALL       _povol_prerus
;pajka.c,219 :: 		return(rezim);
0x06EC	0xF000C03C  	MOVFF       _rezim, R0
;pajka.c,220 :: 		}
L_end_rut_encA:
0x06F0	0x0012      	RETURN      0
; end of _rut_encA
_isr_portb:
;pajka.c,35 :: 		void isr_portb() iv 0x0008 ics ICS_AUTO {
0x06F2	0xF01AC00C  	MOVFF       R12, 26
0x06F6	0xF019C00D  	MOVFF       R13, 25
;pajka.c,36 :: 		povol_prerus_enkoder = 0;
0x06FA	0x96F2      	BCF         RBIE_bit, BitPos(RBIE_bit+0) 
;pajka.c,37 :: 		Delay_ms(2);    //zakmity max 2ms pre enkoder a tlacidlo rucky
0x06FC	0x0E03      	MOVLW       3
0x06FE	0x6E0C      	MOVWF       R12, 0
0x0700	0x0E97      	MOVLW       151
0x0702	0x6E0D      	MOVWF       R13, 0
L_isr_portb0:
0x0704	0x2E0D      	DECFSZ      R13, 1, 0
0x0706	0xD7FE      	BRA         L_isr_portb0
0x0708	0x2E0C      	DECFSZ      R12, 1, 0
0x070A	0xD7FC      	BRA         L_isr_portb0
0x070C	0x0000      	NOP
0x070E	0x0000      	NOP
;pajka.c,38 :: 		if (in_encA)  priz_enc = 1;
0x0710	0xAE81      	BTFSS       RB7_bit, BitPos(RB7_bit+0) 
0x0712	0xD002      	BRA         L_isr_portb1
0x0714	0x0E01      	MOVLW       1
0x0716	0x6E24      	MOVWF       _priz_enc 
L_isr_portb1:
;pajka.c,39 :: 		if (in_encB)  priz_enc = 2;
0x0718	0xAA81      	BTFSS       RB5_bit, BitPos(RB5_bit+0) 
0x071A	0xD002      	BRA         L_isr_portb2
0x071C	0x0E02      	MOVLW       2
0x071E	0x6E24      	MOVWF       _priz_enc 
L_isr_portb2:
;pajka.c,41 :: 		if (in_encBUT) priz_enc = 3;
0x0720	0xAC81      	BTFSS       RB6_bit, BitPos(RB6_bit+0) 
0x0722	0xD002      	BRA         L_isr_portb3
0x0724	0x0E03      	MOVLW       3
0x0726	0x6E24      	MOVWF       _priz_enc 
L_isr_portb3:
;pajka.c,42 :: 		priz_prerus_enkoder = 0;
0x0728	0x90F2      	BCF         RBIF_bit, BitPos(RBIF_bit+0) 
;pajka.c,43 :: 		}
L_end_isr_portb:
L__isr_portb82:
0x072A	0xF00CC01A  	MOVFF       26, R12
0x072E	0xF00DC019  	MOVFF       25, R13
0x0732	0x0011      	RETFIE      1
; end of _isr_portb
_isr_tmr1:
0x0734	0xF018C000  	MOVFF       R0, 24
0x0738	0x6E15      	MOVWF       ___Low_saveWREG 
0x073A	0xF016CFD8  	MOVFF       STATUS, ___Low_saveSTATUS
0x073E	0xF017CFE0  	MOVFF       BSR, ___Low_saveBSR
;pajka.c,45 :: 		void isr_tmr1() iv 0x0018 ics ICS_AUTO {
;pajka.c,46 :: 		povol_prerus_rucka = 0;
0x0742	0x98F0      	BCF         INT2IE_bit, BitPos(INT2IE_bit+0) 
;pajka.c,47 :: 		if(priz_prerus_tmr1)
0x0744	0xA09E      	BTFSS       TMR1IF_bit, BitPos(TMR1IF_bit+0) 
0x0746	0xD007      	BRA         L_isr_tmr14
;pajka.c,48 :: 		if(tmr_tmp < 10){
0x0748	0x0E0A      	MOVLW       10
0x074A	0x5C3B      	SUBWF       _tmr_tmp, 0 
0x074C	0xE202      	BC          L_isr_tmr15
;pajka.c,49 :: 		tmr_tmp++;
0x074E	0x2A3B      	INCF        _tmr_tmp, 1 
;pajka.c,50 :: 		}
0x0750	0xD002      	BRA         L_isr_tmr16
L_isr_tmr15:
;pajka.c,52 :: 		svietiLCD = ~svietiLCD;
0x0752	0x721B      	BTG         _mojPriznak, 1 
;pajka.c,53 :: 		tmr_tmp = 0;
0x0754	0x6A3B      	CLRF        _tmr_tmp 
;pajka.c,54 :: 		}
L_isr_tmr16:
L_isr_tmr14:
;pajka.c,55 :: 		if (priz_prerus_rucka) priznak_tlacidlo_rucky = ~priznak_tlacidlo_rucky;
0x0756	0xB2F0      	BTFSC       INT2IF_bit, BitPos(INT2IF_bit+0) 
0x0758	0x761B      	BTG         _mojPriznak, 3 
L_isr_tmr17:
;pajka.c,56 :: 		priz_prerus_rucka = 0;
0x075A	0x92F0      	BCF         INT2IF_bit, BitPos(INT2IF_bit+0) 
;pajka.c,57 :: 		priz_prerus_tmr1 = 0;
0x075C	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;pajka.c,58 :: 		}
L_end_isr_tmr1:
L__isr_tmr184:
0x075E	0x5017      	MOVF        ___Low_saveBSR, 0 
0x0760	0x6EE0      	MOVWF       BSR 
0x0762	0x5016      	MOVF        ___Low_saveSTATUS, 0 
0x0764	0x6ED8      	MOVWF       STATUS 
0x0766	0x3A15      	SWAPF       ___Low_saveWREG, 1 
0x0768	0x3815      	SWAPF       ___Low_saveWREG, 0 
0x076A	0xF000C018  	MOVFF       24, R0
0x076E	0x0010      	RETFIE      0
; end of _isr_tmr1
_main:
;pajka.c,61 :: 		void main() {
;pajka.c,62 :: 		TRISA = 0b00000001;
0x0770	0x0E01      	MOVLW       1
0x0772	0x6E92      	MOVWF       TRISA 
;pajka.c,63 :: 		TRISB = 0b11100110;
0x0774	0x0EE6      	MOVLW       230
0x0776	0x6E93      	MOVWF       TRISB 
;pajka.c,64 :: 		TRISC = 0;
0x0778	0x6A94      	CLRF        TRISC 
;pajka.c,65 :: 		PORTA = 0;
0x077A	0x6A80      	CLRF        PORTA 
;pajka.c,66 :: 		PORTB = 0;
0x077C	0x6A81      	CLRF        PORTB 
;pajka.c,67 :: 		PORTC = 0;
0x077E	0x6A82      	CLRF        PORTC 
;pajka.c,68 :: 		INTCON = 0;
0x0780	0x6AF2      	CLRF        INTCON 
;pajka.c,69 :: 		RCON.IPEN = 1;      // interrupt priority enabled
0x0782	0x8ED0      	BSF         RCON, 7 
;pajka.c,70 :: 		INTCON.GIEH = 1;   //high prior int enabled
0x0784	0x8EF2      	BSF         INTCON, 7 
;pajka.c,71 :: 		INTCON.GIEL = 1;   //low prior int enabled
0x0786	0x8CF2      	BSF         INTCON, 6 
;pajka.c,72 :: 		INTCON2.RBPU = 0;     //int pull-up
0x0788	0x9EF1      	BCF         INTCON2, 7 
;pajka.c,73 :: 		INTCON2.RBIP = 1;   //portb high priority interrupt
0x078A	0x80F1      	BSF         INTCON2, 0 
;pajka.c,75 :: 		ADCON0 = 0b00000001; //ADC On, AN0 - analog
0x078C	0x0E01      	MOVLW       1
0x078E	0x6EC2      	MOVWF       ADCON0 
;pajka.c,76 :: 		ADCON1 = 0b10001110; //AN0 analog, right just, 12 TaD, FOSC/8
0x0790	0x0E8E      	MOVLW       142
0x0792	0x6EC1      	MOVWF       ADCON1 
;pajka.c,77 :: 		PIE1.ADIE = 0;      //AD polluje
0x0794	0x9C9D      	BCF         PIE1, 6 
;pajka.c,80 :: 		INTCON2.INTEDG2 = 1;
0x0796	0x88F1      	BSF         INTCON2, 4 
;pajka.c,82 :: 		INTCON3.INT2IP = 0;
0x0798	0x9EF0      	BCF         INTCON3, 7 
;pajka.c,84 :: 		T1CON = 0b10110000; //16 bit operation, 1:8 prescaler, oscil disabled
0x079A	0x0EB0      	MOVLW       176
0x079C	0x6ECD      	MOVWF       T1CON 
;pajka.c,85 :: 		TMR1IP_bit = 0;     //low priority
0x079E	0x909F      	BCF         TMR1IP_bit, BitPos(TMR1IP_bit+0) 
;pajka.c,87 :: 		priz_prerus_enkoder = 0;
0x07A0	0x90F2      	BCF         RBIF_bit, BitPos(RBIF_bit+0) 
;pajka.c,88 :: 		priz_prerus_rucka = 0;
0x07A2	0x92F0      	BCF         INT2IF_bit, BitPos(INT2IF_bit+0) 
;pajka.c,89 :: 		priz_prerus_tmr1 = 0;
0x07A4	0x909E      	BCF         TMR1IF_bit, BitPos(TMR1IF_bit+0) 
;pajka.c,90 :: 		povol_prerus_enkoder = 1;
0x07A6	0x86F2      	BSF         RBIE_bit, BitPos(RBIE_bit+0) 
;pajka.c,91 :: 		povol_prerus_rucka = 1;
0x07A8	0x88F0      	BSF         INT2IE_bit, BitPos(INT2IE_bit+0) 
;pajka.c,92 :: 		povol_prerus_tmr1 = 1;
0x07AA	0x809D      	BSF         TMR1IE_bit, BitPos(TMR1IE_bit+0) 
;pajka.c,93 :: 		priznak_tlacidlo_rucky = 0;
0x07AC	0x961B      	BCF         _mojPriznak, 3 
;pajka.c,94 :: 		stary_rezim = 0;
0x07AE	0x6A3A      	CLRF        _stary_rezim 
;pajka.c,95 :: 		rezim = 0;
0x07B0	0x6A3C      	CLRF        _rezim 
;pajka.c,96 :: 		priz_enc = 0;
0x07B2	0x6A24      	CLRF        _priz_enc 
;pajka.c,97 :: 		blinkdisp = 0;
0x07B4	0x901B      	BCF         _mojPriznak, 0 
;pajka.c,98 :: 		zapis = 0;
0x07B6	0x941B      	BCF         _mojPriznak, 2 
;pajka.c,99 :: 		tmr_tmp = 0;
0x07B8	0x6A3B      	CLRF        _tmr_tmp 
;pajka.c,100 :: 		svietiLCD = 0;
0x07BA	0x921B      	BCF         _mojPriznak, 1 
;pajka.c,101 :: 		i = 0;
0x07BC	0x6A1C      	CLRF        _i 
;pajka.c,102 :: 		j = 0;
0x07BE	0x6A2F      	CLRF        _j 
;pajka.c,109 :: 		nastav_rezim(rezim, res_eeprom);   //pri zapnuti prejde do udrziav rezimu
0x07C0	0x6A3D      	CLRF        FARG_nastav_rezim_rezim 
0x07C2	0xF03EC023  	MOVFF       _res_eeprom, FARG_nastav_rezim_res_eeprom
0x07C6	0xDF02      	RCALL       _nastav_rezim
;pajka.c,110 :: 		while (1){
L_main8:
;pajka.c,112 :: 		for(i=0; i<3; i++){
0x07C8	0x6A1C      	CLRF        _i 
L_main10:
0x07CA	0x0E03      	MOVLW       3
0x07CC	0x5C1C      	SUBWF       _i, 0 
0x07CE	0xE228      	BC          L_main11
;pajka.c,114 :: 		temp_int_ad = 0x288;     //skuska - 952
0x07D0	0x0E88      	MOVLW       136
0x07D2	0x6E30      	MOVWF       _temp_int_ad 
0x07D4	0x0E02      	MOVLW       2
0x07D6	0x6E31      	MOVWF       _temp_int_ad+1 
;pajka.c,115 :: 		temp_int_ad >>= 2;       //posun o dva bity - delenie styrmi - 238
0x07D8	0xF000C030  	MOVFF       _temp_int_ad, R0
0x07DC	0xF001C031  	MOVFF       _temp_int_ad+1, R1
0x07E0	0x3201      	RRCF        R1, 1 
0x07E2	0x3200      	RRCF        R0, 1 
0x07E4	0x9E01      	BCF         R1, 7 
0x07E6	0x3201      	RRCF        R1, 1 
0x07E8	0x3200      	RRCF        R0, 1 
0x07EA	0x9E01      	BCF         R1, 7 
0x07EC	0xF030C000  	MOVFF       R0, _temp_int_ad
0x07F0	0xF031C001  	MOVFF       R1, _temp_int_ad+1
;pajka.c,116 :: 		temp_ad[i] = temp_int_ad;
0x07F4	0x0E2B      	MOVLW       _temp_ad
0x07F6	0x6EE1      	MOVWF       FSR1L 
0x07F8	0x0E00      	MOVLW       hi_addr(_temp_ad)
0x07FA	0x6EE2      	MOVWF       FSR1H 
0x07FC	0x501C      	MOVF        _i, 0 
0x07FE	0x26E1      	ADDWF       FSR1L, 1 
0x0800	0xB0D8      	BTFSC       STATUS, 0 
0x0802	0x2AE2      	INCF        FSR1H, 1 
0x0804	0xFFE6C000  	MOVFF       R0, POSTINC1
;pajka.c,117 :: 		Delay_ms(2);
0x0808	0x0E03      	MOVLW       3
0x080A	0x6E0C      	MOVWF       R12, 0
0x080C	0x0E97      	MOVLW       151
0x080E	0x6E0D      	MOVWF       R13, 0
L_main13:
0x0810	0x2E0D      	DECFSZ      R13, 1, 0
0x0812	0xD7FE      	BRA         L_main13
0x0814	0x2E0C      	DECFSZ      R12, 1, 0
0x0816	0xD7FC      	BRA         L_main13
0x0818	0x0000      	NOP
0x081A	0x0000      	NOP
;pajka.c,112 :: 		for(i=0; i<3; i++){
0x081C	0x2A1C      	INCF        _i, 1 
;pajka.c,118 :: 		}
0x081E	0xD7D5      	BRA         L_main10
L_main11:
;pajka.c,119 :: 		res_ad = ((temp_ad[0] + temp_ad[1] + temp_ad[2])/3);
0x0820	0x502C      	MOVF        _temp_ad+1, 0 
0x0822	0x242B      	ADDWF       _temp_ad, 0 
0x0824	0x6E00      	MOVWF       R0 
0x0826	0x6A01      	CLRF        R1 
0x0828	0x0E00      	MOVLW       0
0x082A	0x2201      	ADDWFC      R1, 1 
0x082C	0x502D      	MOVF        _temp_ad+2, 0 
0x082E	0x2600      	ADDWF       R0, 1 
0x0830	0x0E00      	MOVLW       0
0x0832	0x2201      	ADDWFC      R1, 1 
0x0834	0x0E03      	MOVLW       3
0x0836	0x6E04      	MOVWF       R4 
0x0838	0x0E00      	MOVLW       0
0x083A	0x6E05      	MOVWF       R5 
0x083C	0xDC1B      	RCALL       _Div_16x16_S
0x083E	0xF02EC000  	MOVFF       R0, _res_ad
;pajka.c,121 :: 		switch(priz_enc) {
0x0842	0xD012      	BRA         L_main14
;pajka.c,122 :: 		case 1 : rut_encA(&res_eeprom); break;
L_main16:
0x0844	0x0E23      	MOVLW       _res_eeprom
0x0846	0x6E3D      	MOVWF       FARG_rut_encA_p_res_eeprom 
0x0848	0x0E00      	MOVLW       hi_addr(_res_eeprom)
0x084A	0x6E3E      	MOVWF       FARG_rut_encA_p_res_eeprom+1 
0x084C	0xDF2A      	RCALL       _rut_encA
0x084E	0xD015      	BRA         L_main15
;pajka.c,123 :: 		case 2 : rut_encB(&res_eeprom); break;
L_main17:
0x0850	0x0E23      	MOVLW       _res_eeprom
0x0852	0x6E3D      	MOVWF       FARG_rut_encB_p_res_eeprom 
0x0854	0x0E00      	MOVLW       hi_addr(_res_eeprom)
0x0856	0x6E3E      	MOVWF       FARG_rut_encB_p_res_eeprom+1 
0x0858	0xDEFB      	RCALL       _rut_encB
0x085A	0xD00F      	BRA         L_main15
;pajka.c,124 :: 		case 3 : rut_encBUT(&priz_enc); break;
L_main18:
0x085C	0x0E24      	MOVLW       _priz_enc
0x085E	0x6E3D      	MOVWF       FARG_rut_encBUT_p_priz_enc 
0x0860	0x0E00      	MOVLW       hi_addr(_priz_enc)
0x0862	0x6E3E      	MOVWF       FARG_rut_encBUT_p_priz_enc+1 
0x0864	0xDEC1      	RCALL       _rut_encBUT
0x0866	0xD009      	BRA         L_main15
;pajka.c,126 :: 		}
L_main14:
0x0868	0x5024      	MOVF        _priz_enc, 0 
0x086A	0x0A01      	XORLW       1
0x086C	0xE0EB      	BZ          L_main16
0x086E	0x5024      	MOVF        _priz_enc, 0 
0x0870	0x0A02      	XORLW       2
0x0872	0xE0EE      	BZ          L_main17
0x0874	0x5024      	MOVF        _priz_enc, 0 
0x0876	0x0A03      	XORLW       3
0x0878	0xE0F1      	BZ          L_main18
L_main15:
;pajka.c,128 :: 		if(priz_prerus_rucka){  //ak prislo prerusenie od tlacidla
0x087A	0xA2F0      	BTFSS       INT2IF_bit, BitPos(INT2IF_bit+0) 
0x087C	0xD01E      	BRA         L_main19
;pajka.c,129 :: 		if ((priznak_tlacidlo_rucky)&&(!blinkdisp)){
0x087E	0xA61B      	BTFSS       _mojPriznak, 3 
0x0880	0xD00B      	BRA         L_main22
0x0882	0xB01B      	BTFSC       _mojPriznak, 0 
0x0884	0xD009      	BRA         L_main22
L__main80:
;pajka.c,130 :: 		if (rezim) stary_rezim = rezim;
0x0886	0x523C      	MOVF        _rezim, 1 
0x0888	0xE002      	BZ          L_main23
0x088A	0xF03AC03C  	MOVFF       _rezim, _stary_rezim
L_main23:
;pajka.c,131 :: 		rezim = 0;
0x088E	0x6A3C      	CLRF        _rezim 
;pajka.c,132 :: 		nastav_rezim(rezim, res_eeprom);
0x0890	0x6A3D      	CLRF        FARG_nastav_rezim_rezim 
0x0892	0xF03EC023  	MOVFF       _res_eeprom, FARG_nastav_rezim_res_eeprom
0x0896	0xDE9A      	RCALL       _nastav_rezim
;pajka.c,133 :: 		}
L_main22:
;pajka.c,134 :: 		if ((!priznak_tlacidlo_rucky)&&(!blinkdisp)){
0x0898	0xB61B      	BTFSC       _mojPriznak, 3 
0x089A	0xD009      	BRA         L_main26
0x089C	0xB01B      	BTFSC       _mojPriznak, 0 
0x089E	0xD007      	BRA         L_main26
L__main79:
;pajka.c,135 :: 		rezim = stary_rezim;
0x08A0	0xF03CC03A  	MOVFF       _stary_rezim, _rezim
;pajka.c,136 :: 		nastav_rezim(rezim, res_eeprom);
0x08A4	0xF03DC03A  	MOVFF       _stary_rezim, FARG_nastav_rezim_rezim
0x08A8	0xF03EC023  	MOVFF       _res_eeprom, FARG_nastav_rezim_res_eeprom
0x08AC	0xDE8F      	RCALL       _nastav_rezim
;pajka.c,137 :: 		}
L_main26:
;pajka.c,138 :: 		priz_prerus_rucka = 0;
0x08AE	0x92F0      	BCF         INT2IF_bit, BitPos(INT2IF_bit+0) 
;pajka.c,139 :: 		povol_prerus(priz_enc);
0x08B0	0xF03FC024  	MOVFF       _priz_enc, FARG_povol_prerus_p_priz_enc
0x08B4	0x0E00      	MOVLW       0
0x08B6	0x6E40      	MOVWF       FARG_povol_prerus_p_priz_enc+1 
0x08B8	0xDCE7      	RCALL       _povol_prerus
;pajka.c,140 :: 		}
L_main19:
;pajka.c,142 :: 		if(blinkdisp){
0x08BA	0xA01B      	BTFSS       _mojPriznak, 0 
0x08BC	0xD00F      	BRA         L_main27
;pajka.c,143 :: 		konver(rezim, res_eeprom, &lcd_result);
0x08BE	0xF03FC03C  	MOVFF       _rezim, FARG_konver_rezim
0x08C2	0xF040C023  	MOVFF       _res_eeprom, FARG_konver_res_ad_eeprom
0x08C6	0x0E32      	MOVLW       _lcd_result
0x08C8	0x6E41      	MOVWF       FARG_konver_lcd_result 
0x08CA	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x08CC	0x6E42      	MOVWF       FARG_konver_lcd_result+1 
0x08CE	0xDCE1      	RCALL       _konver
;pajka.c,144 :: 		display(&lcd_result);
0x08D0	0x0E32      	MOVLW       _lcd_result
0x08D2	0x6E3F      	MOVWF       FARG_display_lcd_result 
0x08D4	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x08D6	0x6E40      	MOVWF       FARG_display_lcd_result+1 
0x08D8	0xDCBA      	RCALL       _display
;pajka.c,145 :: 		}
0x08DA	0xD00E      	BRA         L_main28
L_main27:
;pajka.c,147 :: 		konver(rezim, res_ad, &lcd_result);
0x08DC	0xF03FC03C  	MOVFF       _rezim, FARG_konver_rezim
0x08E0	0xF040C02E  	MOVFF       _res_ad, FARG_konver_res_ad_eeprom
0x08E4	0x0E32      	MOVLW       _lcd_result
0x08E6	0x6E41      	MOVWF       FARG_konver_lcd_result 
0x08E8	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x08EA	0x6E42      	MOVWF       FARG_konver_lcd_result+1 
0x08EC	0xDCD2      	RCALL       _konver
;pajka.c,148 :: 		display(&lcd_result);
0x08EE	0x0E32      	MOVLW       _lcd_result
0x08F0	0x6E3F      	MOVWF       FARG_display_lcd_result 
0x08F2	0x0E00      	MOVLW       hi_addr(_lcd_result)
0x08F4	0x6E40      	MOVWF       FARG_display_lcd_result+1 
0x08F6	0xDCAB      	RCALL       _display
;pajka.c,149 :: 		}
L_main28:
;pajka.c,153 :: 		if (res_eeprom > res_ad){
0x08F8	0x5023      	MOVF        _res_eeprom, 0 
0x08FA	0x5C2E      	SUBWF       _res_ad, 0 
0x08FC	0xE202      	BC          L_main29
;pajka.c,154 :: 		out_paj = 1;
0x08FE	0x8681      	BSF         RB3_bit, BitPos(RB3_bit+0) 
;pajka.c,155 :: 		}
0x0900	0xD001      	BRA         L_main30
L_main29:
;pajka.c,157 :: 		out_paj = 0;
0x0902	0x9681      	BCF         RB3_bit, BitPos(RB3_bit+0) 
;pajka.c,158 :: 		}
L_main30:
;pajka.c,159 :: 		}//while
0x0904	0xD761      	BRA         L_main8
;pajka.c,160 :: 		}//main
L_end_main:
0x0906	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [88]    _Div_16x16_S_L
0x0074     [198]    _Div_16x16_S
0x013A      [98]    _div
0x019C      [80]    _Mul_16X16_U
0x01EC      [54]    _Div_16X16_U
0x0222      [22]    _nobusy_send_instr
0x0238      [22]    _nobusy_send_data
0x024E      [58]    _display
0x0288      [10]    _povol_prerus
0x0292     [748]    _konver
0x057E      [62]    _EEPROM_Write
0x05BC      [16]    _EEPROM_Read
0x05CC      [12]    _nastav_rezim
0x05D8      [16]    ___CC2DW
0x05E8     [104]    _rut_encBUT
0x0650      [82]    _rut_encB
0x06A2      [80]    _rut_encA
0x06F2      [66]    _isr_portb
0x0734      [60]    _isr_tmr1
0x0770     [408]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    ___Low_saveWREG
0x0016       [1]    ___Low_saveSTATUS
0x0017       [1]    ___Low_saveBSR
0x001B       [0]    _svietiLCD
0x001B       [0]    _zapis
0x001B       [0]    _priznak_tlacidlo_rucky
0x001B       [0]    _blinkdisp
0x001B       [1]    _mojPriznak
0x001C       [1]    _i
0x001D       [1]    _byte
0x001E       [4]    _digit_sto
0x0022       [1]    _sto
0x0023       [1]    _res_eeprom
0x0024       [1]    _priz_enc
0x0025       [1]    _jed
0x0026       [4]    _digit_des
0x002A       [1]    _des
0x002B       [3]    _temp_ad
0x002E       [1]    _res_ad
0x002F       [1]    _j
0x0030       [2]    _temp_int_ad
0x0032       [8]    _lcd_result
0x003A       [1]    _stary_rezim
0x003B       [1]    _tmr_tmp
0x003C       [1]    _rezim
0x003D       [2]    FARG_rut_encBUT_p_priz_enc
0x003D       [2]    FARG_rut_encA_p_res_eeprom
0x003D       [2]    FARG_rut_encB_p_res_eeprom
0x003D       [1]    FARG_nastav_rezim_rezim
0x003E       [1]    FARG_nastav_rezim_res_eeprom
0x003F       [1]    FARG_EEPROM_Write_address
0x003F       [1]    FARG_konver_rezim
0x003F       [2]    FARG_povol_prerus_p_priz_enc
0x003F       [1]    FARG_EEPROM_Read_address
0x003F       [2]    FARG_display_lcd_result
0x0040       [1]    FARG_EEPROM_Write_data_
0x0040       [1]    FARG_konver_res_ad_eeprom
0x0041       [2]    FARG_konver_lcd_result
0x0043       [1]    konver_temp0_L0
0x0044       [2]    konver_res_lcd_L0
0x0046       [1]    konver_temp_L0
0x0047       [4]    FLOC__konver
0x004B       [1]    FARG_nobusy_send_data_byte
0x004B       [1]    FARG_nobusy_send_instr_byte
0x004B       [2]    FARG_div_number
0x004D       [2]    FARG_div_denom
0x004F       [2]    _div_su_addr
0x0051       [4]    div_rv_L0
0x0F80       [1]    PORTA
0x0F81       [0]    out_paj
0x0F81       [0]    in_encA
0x0F81       [0]    in_encBUT
0x0F81       [0]    in_encB
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB3_bit
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F89       [0]    lcd_E
0x0F89       [0]    lcd_RW
0x0F89       [0]    LATA2_bit
0x0F89       [0]    lcd_RS
0x0F89       [0]    LATA1_bit
0x0F89       [0]    LATA3_bit
0x0F8B       [1]    LATC
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0F9D       [1]    PIE1
0x0F9D       [0]    povol_prerus_tmr1
0x0F9D       [0]    TMR1IE_bit
0x0F9E       [0]    priz_prerus_tmr1
0x0F9E       [0]    TMR1IF_bit
0x0F9F       [0]    TMR1IP_bit
0x0FA1       [1]    PIR2
0x0FA6       [1]    EECON1
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FCD       [0]    spusti_tmr1
0x0FCD       [1]    T1CON
0x0FCD       [0]    TMR1ON_bit
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [1]    RCON
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF0       [0]    INT2IF_bit
0x0FF0       [1]    INTCON3
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    povol_prerus_rucka
0x0FF0       [0]    priz_prerus_rucka
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF2       [0]    priz_prerus_enkoder
0x0FF2       [0]    povol_prerus_enkoder
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    RBIE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
